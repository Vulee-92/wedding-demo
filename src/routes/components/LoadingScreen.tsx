import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Box, Container, styled, Typography } from '@mui/material';

// SVG của bạn
const yourSvgPath = `
M1.568 54.776C0.842666 54.776 0.48 54.4347 0.48 53.752C0.48 53.496 0.501333 53.3253 0.544 53.24C2.12267 49.784 6.41067 44.6213 13.408 37.752C13.1947 37.7947 13.0027 37.8373 12.832 37.88C12.6613 37.88 12.5333 37.88 12.448 37.88C11.7227 37.88 11.36 37.4747 11.36 36.664C11.36 36.1947 11.7227 35.896 12.448 35.768C12.8747 35.6827 13.3227 35.6187 13.792 35.576C14.304 35.4907 14.944 35.3627 15.712 35.192C20.8747 29.816 25.8453 25.208 30.624 21.368C35.4453 17.4853 40.0533 14.3067 44.448 11.832C44.832 11.6187 45.1733 11.448 45.472 11.32C45.7707 11.1493 46.0267 11.064 46.24 11.064C46.752 11.064 47.008 11.4053 47.008 12.088C47.008 13.368 45.728 17.7627 43.168 25.272L40.352 33.528C41.4613 33.528 42.016 33.8693 42.016 34.552C42.016 35.32 41.2907 35.704 39.84 35.704C39.0293 37.9227 38.2613 40.376 37.536 43.064C36.8533 45.7093 36.2773 48.44 35.808 51.256C35.6373 52.152 35.2533 52.6 34.656 52.6C33.9307 52.6 33.568 52.216 33.568 51.448C33.568 51.32 33.6107 51.0427 33.696 50.616C33.7813 50.1893 33.9093 49.6347 34.08 48.952C34.592 46.4773 35.04 44.4293 35.424 42.808C35.8507 41.1867 36.2133 39.8213 36.512 38.712C36.8533 37.56 37.152 36.5147 37.408 35.576C29.5573 35.7467 22.6453 36.3227 16.672 37.304C14.9653 39.0533 13.536 40.5467 12.384 41.784C11.232 42.9787 10.3787 43.8747 9.824 44.472C7.264 47.288 5.216 49.848 3.68 52.152C3.552 52.3653 3.40267 52.6427 3.232 52.984C3.01867 53.3253 2.76267 53.7307 2.464 54.2C2.29333 54.584 1.99467 54.776 1.568 54.776ZM19.296 34.68C21.7707 34.3387 24.5653 34.0827 27.68 33.912C30.7947 33.6987 34.2933 33.5493 38.176 33.464C38.816 31.5013 39.456 29.6027 40.096 27.768C40.736 25.8907 41.3547 24.0987 41.952 22.392C42.6773 20.5147 43.6373 17.6987 44.832 13.944C39.8827 16.8027 35.2747 19.96 31.008 23.416C26.784 26.872 22.88 30.6267 19.296 34.68ZM39.456 7.608C39.2853 7.608 39.0933 7.52266 38.88 7.352C38.7093 7.18133 38.624 7.01066 38.624 6.84C38.624 6.62666 38.7093 6.456 38.88 6.328C38.9653 6.24266 39.3067 6.008 39.904 5.624C40.544 5.24 41.312 4.792 42.208 4.28C43.1467 3.72533 44.0853 3.192 45.024 2.68C45.9627 2.12533 46.7947 1.67733 47.52 1.336C48.2453 0.994665 48.736 0.823997 48.992 0.823997C49.248 0.823997 49.6533 1.05866 50.208 1.528C50.8053 1.99733 51.424 2.57333 52.064 3.256C52.704 3.896 53.28 4.51467 53.792 5.112C54.3467 5.70933 54.7307 6.15733 54.944 6.456C54.9867 6.54133 55.008 6.66933 55.008 6.84C55.008 7.05333 54.9013 7.24533 54.688 7.416C54.4747 7.544 54.2613 7.608 54.048 7.608C53.7493 7.608 53.4933 7.48 53.28 7.224C52.5547 6.456 51.744 5.688 50.848 4.92C49.9947 4.152 49.248 3.55466 48.608 3.128C47.968 3.42666 47.1787 3.81066 46.24 4.28C45.344 4.70667 44.4267 5.176 43.488 5.688C42.5493 6.15733 41.7173 6.56267 40.992 6.904C40.3093 7.24533 39.904 7.45866 39.776 7.544C39.6907 7.58666 39.584 7.608 39.456 7.608ZM44.85 52.6C44.1673 52.6 43.826 52.3227 43.826 51.768C43.826 51.5547 43.9113 51.2987 44.082 51C44.2527 50.6587 44.402 50.3813 44.53 50.168L50.29 38.584C52.7647 33.5493 54.002 30.7547 54.002 30.2C54.002 29.6027 54.3007 29.304 54.898 29.304C55.7087 29.304 56.114 29.7307 56.114 30.584C56.114 30.8827 55.922 31.5227 55.538 32.504C55.154 33.4853 54.6633 34.5947 54.066 35.832C53.042 38.0507 52.1887 39.7573 51.506 40.952C52.786 39.4587 54.0873 38.0507 55.41 36.728C56.7327 35.4053 58.0767 34.1467 59.442 32.952C63.4953 29.4107 66.61 27.64 68.786 27.64C70.2793 27.64 71.026 28.344 71.026 29.752C71.026 31.032 69.938 33.912 67.762 38.392C65.586 42.9147 64.498 45.7733 64.498 46.968C64.498 47.5227 64.69 47.8 65.074 47.8C65.202 47.8 65.394 47.7573 65.65 47.672C65.9487 47.544 66.2473 47.48 66.546 47.48C67.2713 47.48 67.634 47.8213 67.634 48.504C67.634 49.3573 66.7167 49.784 64.882 49.784C64.0287 49.784 63.41 49.592 63.026 49.208C62.642 48.7813 62.45 48.2267 62.45 47.544C62.45 45.496 63.4953 42.3813 65.586 38.2C67.6767 34.0613 68.722 31.5653 68.722 30.712C68.722 30.2 68.53 29.944 68.146 29.944C67.2073 29.944 65.6927 30.7333 63.602 32.312C61.3407 34.0187 59.0793 35.9813 56.818 38.2C54.5567 40.4187 52.402 42.9573 50.354 45.816L45.874 52.024C45.618 52.408 45.2767 52.6 44.85 52.6ZM108.443 35.768L92.379 35.704C91.6963 35.704 91.355 35.3413 91.355 34.616C91.355 33.9333 91.6963 33.592 92.379 33.592L108.571 33.656C109.211 33.656 109.531 33.976 109.531 34.616C109.531 35.384 109.168 35.768 108.443 35.768ZM133.834 57.272C133.023 57.272 132.618 56.9093 132.618 56.184C132.618 51.1493 135.562 43.2987 141.45 32.632C141.877 31.864 142.538 30.7333 143.434 29.24C141.983 29.4107 140.767 29.7307 139.786 30.2C138.847 30.6267 138.229 30.84 137.93 30.84C137.162 30.84 136.778 30.4773 136.778 29.752C136.778 28.6427 139.423 27.6827 144.714 26.872C145.439 25.6347 146.357 24.0987 147.466 22.264C148.618 20.4293 149.983 18.2747 151.562 15.8C152.714 13.9653 153.695 12.3653 154.506 11C155.317 9.592 155.978 8.312 156.49 7.16C156.661 6.73333 156.938 6.52 157.322 6.52C158.133 6.52 158.538 6.94666 158.538 7.8C158.538 8.09866 158.026 9.10133 157.002 10.808C156.021 12.472 154.463 15.032 152.33 18.488L147.274 26.616C148.895 26.4453 150.602 26.3173 152.394 26.232C154.186 26.1467 156.021 26.104 157.898 26.104C161.653 26.104 168.543 26.424 178.57 27.064C179.423 25.2293 180.319 23.4373 181.258 21.688C182.239 19.896 183.263 18.1253 184.33 16.376C185.866 13.7733 187.21 11.7467 188.362 10.296C189.514 8.80267 190.367 7.84267 190.922 7.416C191.477 6.98933 191.925 6.776 192.266 6.776C192.906 6.776 193.226 7.11733 193.226 7.8C193.226 8.14133 193.034 8.44 192.65 8.696C191.882 9.25067 190.943 10.2533 189.834 11.704C188.725 13.1547 187.487 15.0533 186.122 17.4C184.074 20.856 182.325 24.1413 180.874 27.256C182.367 27.256 183.114 27.6187 183.114 28.344C183.114 28.6427 183.007 28.8987 182.794 29.112C182.581 29.3253 182.261 29.4107 181.834 29.368L179.914 29.24C175.605 38.84 173.45 45.4107 173.45 48.952V50.36C173.45 50.872 173.087 51.128 172.362 51.128C171.679 51.128 171.338 50.3813 171.338 48.888C171.338 45.1333 173.429 38.52 177.61 29.048C172.405 28.7493 168.117 28.536 164.746 28.408C161.418 28.28 159.007 28.216 157.514 28.216C153.333 28.216 149.514 28.408 146.058 28.792L143.306 33.592C141.215 37.304 139.573 40.632 138.378 43.576C137.183 46.4773 136.373 48.6533 135.946 50.104C135.519 51.768 135.242 53.048 135.114 53.944C134.986 54.84 134.879 55.672 134.794 56.44C134.751 56.9947 134.431 57.272 133.834 57.272ZM187.03 51.64C184.555 51.64 183.318 50.4667 183.318 48.12C183.318 46.584 183.68 44.9413 184.406 43.192C185.174 41.4 186.198 39.672 187.478 38.008C188.758 36.3013 190.187 34.7653 191.766 33.4C193.344 31.992 194.966 30.8827 196.63 30.072C198.294 29.2187 199.894 28.792 201.43 28.792C204.16 28.792 205.526 30.136 205.526 32.824C205.526 34.5733 205.099 35.448 204.246 35.448C203.478 35.448 203.094 35.0853 203.094 34.36C203.094 34.0613 203.158 33.7627 203.286 33.464C203.456 33.1227 203.542 32.76 203.542 32.376C203.542 31.1813 202.731 30.584 201.11 30.584C198.507 30.584 195.243 32.568 191.318 36.536C190.379 37.5173 189.462 38.6693 188.566 39.992C187.67 41.3147 186.923 42.6587 186.326 44.024C185.771 45.3467 185.494 46.6053 185.494 47.8C185.494 48.952 186.134 49.528 187.414 49.528C188.523 49.528 189.696 49.1867 190.934 48.504C192.214 47.8213 193.323 47.1173 194.262 46.392C196.139 44.984 198.059 43.064 200.022 40.632C200.32 40.2907 200.704 39.8427 201.174 39.288C201.643 38.7333 202.176 38.1147 202.774 37.432C202.987 37.2187 203.243 37.112 203.542 37.112C204.224 37.112 204.566 37.4533 204.566 38.136L202.134 41.784C200.512 44.1733 199.702 46.136 199.702 47.672C199.702 48.7813 200.235 49.336 201.302 49.336C202.198 49.336 203.179 49.1013 204.246 48.632C205.312 48.1627 206.187 47.6933 206.87 47.224C208.235 46.328 209.664 45.2187 211.158 43.896C212.651 42.5307 214.08 41.1653 215.446 39.8C215.616 39.6293 215.872 39.544 216.214 39.544C216.854 39.544 217.174 39.8 217.174 40.312C217.174 40.7813 216.875 41.3147 216.278 41.912C214.571 43.6187 213.035 45.0907 211.67 46.328C210.304 47.5227 209.003 48.504 207.766 49.272C206.955 49.7413 205.952 50.232 204.758 50.744C203.563 51.256 202.198 51.512 200.662 51.512C198.571 51.512 197.526 50.4027 197.526 48.184C197.526 47.3307 197.632 46.6267 197.846 46.072C193.963 49.784 190.358 51.64 187.03 51.64ZM188.885 59.128C188.587 59.256 188.246 59.0853 187.862 58.616C187.52 58.1467 187.35 57.6773 187.35 57.208C187.35 56.7813 187.52 56.4187 187.862 56.12C188.203 55.8213 188.416 55.6507 188.502 55.608C188.715 55.5653 188.907 55.5227 189.078 55.48C189.291 55.48 189.483 55.48 189.654 55.48C190.379 55.48 190.742 55.7787 190.742 56.376C190.742 56.504 190.699 56.7387 190.614 57.08C190.528 57.464 190.358 57.8267 190.102 58.168C189.888 58.552 189.483 58.872 188.885 59.128Z
`;

interface LoadingScreenProps {
  onComplete: () => void;
}

const LoadingScreen: React.FC<LoadingScreenProps> = ({ onComplete }) => {
  const [opened, setOpened] = useState(false);
  const backgroundVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        duration: 1.5,
        ease: 'easeInOut',
      },
    },
  };
  const DateTable = styled(motion.div)(({ theme }) => ({
    display: 'grid',
    gridTemplateColumns: '1fr 2px 1fr 2px 1fr',
    justifyItems: 'center',
    alignItems: 'center',
    margin: theme.spacing(4, 0),
    [theme.breakpoints.down('sm')]: {
      gridTemplateColumns: '1fr 1px 1fr 1px 1fr',
    },
  }));
  
  const DateItem = styled(Box)(({ theme }) => ({
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    padding: '0 10px',
    '& .label': {
      fontFamily: "'Playfair Display', serif",
      fontSize: 'clamp(0.8rem, 2vw, 1rem)',
      color: '#666',
    },
    '& .value': {
      fontFamily: "'Playfair Display', serif",
      fontSize: 'clamp(2.5rem, 6vw, 3.5rem)',
      color: '#333',
      fontWeight: 'bold',
      lineHeight: 1.2,
    },
    '& .separator': {
      width: '1px',
      height: '60px',
      backgroundColor: '#ccc',
    }
  }));
  const pathVariants = {
    hidden: { pathLength: 0, opacity: 0 },
    visible: {
      pathLength: 1,
      opacity: 1,
      transition: {
        duration: 1,
        ease: 'easeInOut',
      },
    },
  };
  const svgVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        duration: 1,
        when: 'beforeChildren',
        staggerChildren: 0.05,
      },
    },
  };
const staggerContainer = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.2,
      delayChildren: 0.2
    }
  }
};

const itemVariants = {
  hidden: { opacity: 1, y: 30 },
  visible: { opacity: 1, y: 0, transition: { duration: 0.6, ease: "easeOut" } }
};
  const handleOpen = () => {
    setOpened(true);
    setTimeout(() => {
      onComplete();
    }, 1200); // delay để chạy hiệu ứng xong rồi mới gọi
  };
  const MonthTitle = styled(Typography)(({ theme }) => ({
    fontFamily: "'Oooh Baby', cursive",
    fontSize: 'clamp(2rem, 5vw, 2.5rem)',
    color: '#000',
    textAlign: 'center',
    marginBottom: theme.spacing(2),
  }));
  return (
    <Container
      maxWidth={false}
      disableGutters
      sx={{
        minHeight: '100vh',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        backgroundImage: 'url(/assets/images/wedding/hoahongnhe.png)',
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        position: 'relative',
        overflow: 'hidden',
      }}
    >

      {/* Paper phủ nửa dưới */}
      <motion.div
        initial={{ y: '100%', opacity: 0 }}
        animate={{ y: '40%', opacity: 1 }}
        transition={{ duration: 1.2, ease: 'easeOut' }}
        style={{
          position: 'absolute',
          bottom: 0,
          left: 0,
          width: '100%',
          height: '100%',
          backgroundImage: 'url(/assets/images/paper.png)',
          backgroundSize: 'cover',
          backgroundPosition: 'center',
          borderTopLeftRadius: '20px',
          borderTopRightRadius: '20px',
          // boxShadow: '0 -4px 20px rgba(0,0,0,0.2)',
          zIndex: 1,
        }}
      />

      {/* Thiệp + hoa nằm giữa */}
      <Box
        sx={{
          position: 'relative',
          zIndex: 2,
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
        }}
      >
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          width="218"
          height="60"
          viewBox="0 0 218 60"
          fill="none"
          style={{
            width: '250px',
            height: 'auto',
            stroke: '#928362',
            marginBottom: '50px',
            strokeWidth: '1',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
            zIndex: 1,
          }}
          variants={svgVariants}
          initial="hidden"
          animate="visible"
        >
          <motion.path d={yourSvgPath} variants={pathVariants} />
        </motion.svg>
        {/* Thiệp */}
        <motion.img
          onClick={handleOpen}
          src="/assets/images/thieppng.png"
          alt="Wedding Envelope"
          initial={{ opacity: 0, y: -50, scale: 0.9 }}
          animate={{
            opacity: 1,
            y: 0,
            scale: opened ? 1.2 : 1,
            rotate: opened ? 5 : 0,
          }}
          transition={{ duration: 1, type: 'spring' }}
          whileHover={{ scale: 1.05 }}
          style={{
            maxWidth: '300px',
            height: 'auto',
            cursor: 'pointer',
            zIndex: 2,
          }}
        />

        {/* Hoa phủ lên thiệp */}
        <motion.img
          src="/assets/images/flow1.png"
          alt="Flower"
          initial={{ opacity: 0, scale: 0.85 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 1.2, delay: 0.5 }}
          style={{
            position: 'absolute',
            left: '-210px',
            bottom: '-100px',
            width: '360px',
            zIndex: 3,
            pointerEvents: 'none',
          }}
        />

        {/* Chữ hướng dẫn */}
        {!opened && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1.5, delay: 1 }}
            style={{
              marginTop: '12px',
              color: '#6b4f2d',
              fontFamily: 'serif',
              fontSize: '16px',
              fontStyle: 'italic',
              textAlign: 'center',
            }}
          >
            Nhấp vào thiệp để mở 💌
          </motion.div>
        )}
      </Box>

      {/* Nội dung bên trong paper */}
      <Box
        sx={{
          position: 'absolute',
          bottom: 0,
          width: '100%',
          maxWidth: 600,
          mx: 'auto',
          p: 4,
          textAlign: 'center',
          color: '#6b4f2d',
          fontFamily: 'serif',
          zIndex: 2,
        }}
      >
        {/* <MonthTitle>
          HTTL Hà Nội
        </MonthTitle> */}

        <DateTable variants={staggerContainer}>

          <motion.div variants={itemVariants}>
            <DateItem>
              <Typography className="label">Thứ 7</Typography>
              <Typography className="value">27</Typography>
            </DateItem>
          </motion.div>
          <Box sx={{ width: '1px', height: '60px', backgroundColor: '#ccc' }} />
          <motion.div variants={itemVariants}>
            <DateItem>
              <Typography className="label">THÁNG</Typography>
              <Typography className="value">09</Typography>
            </DateItem>
          </motion.div>
          <Box sx={{ width: '1px', height: '60px', backgroundColor: '#ccc' }} />
          <motion.div variants={itemVariants}>
            <DateItem>
              <Typography className="label">NĂM</Typography>
              <Typography className="value">2025</Typography>
            </DateItem>
          </motion.div>
        </DateTable>
      </Box>
    </Container>
  );
};

export default LoadingScreen;
